#ifdef __MODULE_18__
/* Задача 2
 *  Что нужно сделать
 *  Кролик сидит на нулевой ступеньке большой лестницы. Он может прыгать на одну или более ступенек
 *  вверх, но не далее чем на k. Кролик хочет допрыгать до n-й ступеньки, но может сделать это
 *  большим количеством способов.
 *  Напишите рекурсивную функцию, которая принимает число n типа int и число k — максимальную длину прыжка, а возвращает количество способов, которым кролик может доскакать до n-й ступеньки. В функции для аргумента “максимальная длина прыжка” задать значение, по умолчанию равное 3.
 *  
 *  Пример:
 *  Ввод: 3, 2
 *  Вывод: 3
 *  Пояснение: (1,2), (2,1), (1,1,1) */

#include <iostream>
#include "Module_18.hpp"

// безопасный ввод количества ступенек
static int safe_enter(std::string invite_str, std::string error_str) {
    int X;
    do {
        std::cout << invite_str;
        std::cin >> X;
        if (X <= 0)
            std::cout << error_str;
    } while (X <= 0);
    
    return X;
}

static int rabbit_jumps(int n, const int k = 3) {
    int result = 0;
    for (int i = 1; i <= k && i <= n; i++) {
        if (n == i)
            result++;
        else
            result += rabbit_jumps(n-i, k);
    }
    return result;
}

void Task_18_2() {
    std::cout << equals << string_tasks[1] << equals;

    std::string userAnswer;
    int n, k;
    n = safe_enter("Введите количество ступенек (от 1): ",
                   "ОШИБКА! Количество ступенек должно быть от 1!\n");
    std::cout << "Хотите ввести максимальный прыжок кролика? (Y - да) ";
    std::cin >> userAnswer;
    if (userAnswer == "Y" || userAnswer == "y") {
        k = safe_enter("Введите максимальный прыжок кролика (от 1): ",
                       "ОШИБКА! Максимальный прыжок должен быть от 1!\n");
        std::cout << "Количество способов, которым кролик может допрыгнуть: ";
        std::cout << rabbit_jumps(n, k) << "\n";
    }
    else {
        std::cout << "Для максимального прыжка применено значение по умолчанию!\n";
        std::cout << "Количество способов, которым кролик может допрыгнуть: ";
        std::cout << rabbit_jumps(n) << "\n";
    }
}
#endif
