#ifdef __MODULE_20__
/* Задание 2. Реализация рисования случайных картин
 *  Что нужно сделать
 *  С помощью генератора случайных чисел рисуется картинка из нулей и единиц. На вход от
 *  пользователя принимается размер картины: высота и ширина в пикселях. На выходе нужно создать
 *  файл pic.txt, содержимое которого будет наполнено случайными нулями и единицами в рамках размера
 *  картины.
 *  Это ещё не всё. Если вы запустите программу несколько раз на одних и тех же исходных данных
 *  (ширина и высота картины), вы очень скоро обнаружите, что всё время выводится одна и та же
 *  картинка. Дело в том, что у генератора случайных чисел есть ещё и «зерно», от которого он
 *  отталкивается. Если это зерно не меняется, то и серия из rand() всегда будет возвращать одни и
 *  те же случайные числа.
 *  Чтобы разнообразить вывод, вы можете использовать вызов std::srand(std::time(nullptr)); в самом
 *  начале программы. Эта операция задаёт начальное зерно случайных чисел в зависимости от текущего
 *  времени. Для её корректной работы не забудьте также включить заголовочный файл <ctime>. */

#include <iostream>
#include <fstream>
#include <string>
#include <ctime>
#include "Module_20.hpp"

// безопасный ввод размеров картинки
static int safe_enter(std::string invite_str, std::string error_str) {
    int X;
    do {
        std::cout << invite_str;
        std::cin >> X;
        if (X <= 0)
            std::cout << error_str;
    } while (X <= 0);
    
    return X;
}

void Task_20_2() {
    std::cout << equals << string_tasks[1] << equals;

    std::srand(std::time(nullptr));

    int height, width;
    std::ofstream file;

    file.open(CUR_DIR + DOCS_DIR + "pic.txt");
    if (file.is_open()) {
        height = safe_enter("Введите высоту картинки: ",
                            "Ошибка! Высота должна быть больше нуля!\n");
        width  = safe_enter("Введите ширину картинки: ",
                            "Ошибка! Ширина должна быть больше нуля!\n");
        
        for (int _ = 0; _ < height; _++) {
            for (int _ = 0; _ < width; _++) {
                file << rand() % 2;
            }
            file << "\n";
        }
        
        file.close();
    } else {
        std::cout << "File is not open!\n";
    }
}
#endif
