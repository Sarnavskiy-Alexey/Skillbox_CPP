#ifdef __MODULE_14__
/* Задание 7. Почти «Майнкрафт» (дополнительное задание)
 *  Нам предстоит сделать некое подобие «Майнкрафта». Миллионов не обещаю, но это интересная задача
 *  на пространственное мышление. У нас есть небольшой квадратный ландшафт, размером 5 × 5 секторов.
 *  В каждом секторе располагается блок (столбик) ландшафта, максимальная высота которого — 10
 *  блоков. Текущая высота каждого такого блока задаётся пользователем в начале программы. Итоговая
 *  задача: используя трёхмерный массив, вывести в стандартный вывод горизонтальное сечение (или
 *  горизонтальный срез) нашего небольшого мира. Сам мир как раз должен быть представлен в виде
 *  трёхмерного массива. Его горизонтальный срез — это двумерный массив, который надо отобразить в
 *  виде единиц и нулей. 0 — это отсутствие элемента на данном уровне в данной точке, 1 — элемент
 *  есть. Уровень среза от 0 до 9 включительно также задаётся в стандартном вводе.
 *  
 *  Пример выполнения:
 *    input matrix of heights:
 *    5 5 5 5
 *    4 4 4 4
 *    3 2 2 3
 *    1 1 1 1
 *  input slice: 4
 *    1 1 1 1
 *    1 1 1 1
 *    0 0 0 0
 *    0 0 0 0
 *  input slice: 3
 *    1 1 1 1
 *    1 1 1 1
 *    1 0 0 1
 *    0 0 0 0
 *  
 *  Пояснение к примеру на картинке на сайте.
 *  
 *  Что оценивается:
 *  - Использован трёхмерный массив.
 *  - Пользователь задаёт срез ландшафта, который хочет увидеть (от 0 до 9).
 *  - Выводится срез размером 5 × 5, состоящий из 0 и 1.
 *  
 *  Советы и рекомендации:
 *  - При печати потребуется проверять содержимое трёхмерного массива. При уже известном значении
 *    уровня level проверка выглядит так:
 *  
 *    if (world[i][j][level]) 
 *    { 
 *        //печатаем 1 
 *    } else { 
 *        //печатаем 0 
 *    } */

#include <iostream>
#include "Module_14.hpp"

// безопасный ввод координаты
static int safe_enter(std::string invite_str, std::string error_str) {
    int X;
    do {
        std::cout << invite_str;
        std::cin >> X;
        if (X < 0 || X > 9)
            std::cout << error_str;
    } while (X < 0 || X > 9);
    
    return X;
}

void Task_14_7() {
    std::cout << equals << string_tasks[6] << equals;

    bool world[5][5][10] = {0};
    int height, slice;

    for (int i = 0; i < 5; i++) {
        for (int j = 0; j < 5; j++) {
            height = safe_enter("Введите высоту сектора [" +
                                                 std::to_string(i) + "," + std::to_string(j) + "]: ",
                                "ОШИБКА! Высота должна быть задана в диапазоне от 0 до 9!\n");
            for (int level = 0; level <= height; level++)
                world[i][j][level] = true;
        }
    }

    slice = safe_enter("Введите высоту среза: ",
                       "ОШИБКА! Высота среза должна быть в диапазоне от 0 до 9!\n");
    
    std::cout << "Срез ландшафта:\n";
    for (int i = 0; i < 5; i++) {
        for (int j = 0; j < 5; j++) {
            std::cout << world[i][j][slice] << " ";
        }
        std::cout << "\n";
    }
}
#endif
