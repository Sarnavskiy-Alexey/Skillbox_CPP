#ifdef __MODULE_08__
/* Задание 7. Друзья Оушена* (дополнительное задание)
 *  Банковский сейф оборудован механическим кодовым замком, состоящим из N крутящихся ручек,
 *  каждая из которых имеет K положений. Существует только одна комбинация положений всех N ручек,
 *  которая открывает сейф. Чтобы его открыть, достаточно перебрать все существующие комбинации.
 *  На проверку одной комбинации уходит в среднем T секунд, где T — вещественное число. Напишите
 *  программу, которая по заданным N, K и T определяет время, которое потребуется для перебора
 *  всех комбинаций и гарантированного открытия сейфа. Не используйте циклы. Обеспечьте контроль
 *  ввода. */

#include <iostream>
#include <cmath>
#include "Module_08.hpp"

void Task_08_7() {
    std::cout << equals << string_tasks[6] << equals;

    int N, K;
    float T;

    // безопасный ввод количества ручек сейфа
    do {
        std::cout << "Введите количество ручек сейфа: ";
        std::cin >> N;
        if (N <= 0)
            std::cout << "ОШИБКА! Количество ручек должно быть положительным!\n";
    } while (N <= 0);

    // безопасный ввод количества положений каждой ручки сейфа
    do {
        std::cout << "Введите количество положений каждой ручки: ";
        std::cin >> K;
        if (K <= 0)
            std::cout << "ОШИБКА! Количество положений каждой ручки должно быть положительным!\n";
    } while (K <= 0);

    // безопасный ввод времени, которое тратится на проверку одной комбинации
    do {
        std::cout << "Введите время на проверку одной комбинации (сек): ";
        std::cin >> T;
        if (T <= 0.0f)
            std::cout << "ОШИБКА! Время на проверку одной комбинации должно быть положительным!\n";
    } while (T <= 0.0f);

    // расчет времени проверки всех комбинации:
    float allTime = std::pow((float)K, N) * T;
    std::cout << "Для проверки всех комбинаций потребуется: " << allTime << " сек.\n";
}
#endif
