#ifdef __MODULE_13__
/* Задача 3
 *  Вам дали задание разработать хранилище для целочисленных значений во встраиваемой операционной
 *  системе. Такие системы работают в большей части техники, которая нас окружает: автомобилях,
 *  стиральных машинах, микроволновках, холодильниках. Только вот незадача: объём памяти этой
 *  системы очень небольшой, поэтому в хранилище не может находиться более 20 элементов.
 *  В хранилище, являющееся вектором, с клавиатуры приходят целочисленные значения и помещаются один
 *  за другим.
 *  При вводе «-1» с клавиатуры необходимо вывести всё содержимое хранилища (20 или менее
 *  элементов). При выводе элементы должны быть в том порядке, в котором они добавлялись.
 *  Попробуйте написать максимально оптимизированное решение этой задачи, чтобы совершалось как
 *  можно меньше расширений и перемещений элементов внутри вектора. */

#include <iostream>
#include <vector>
#include <string>
#include "Module_13.hpp"

void print_buf(std::vector<int> vect, int begin, int end) {
    std::cout << "В буфере находятся следующие значения:\n";

    if (end >= begin)
        for (int i = begin; i <= end; i++)
            std::cout << vect[i] << " ";
    else {
        for (unsigned int i = begin; i < vect.size(); i++)
            std::cout << vect[i] << " ";
        for (int i = 0; i <= end; i++)
            std::cout << vect[i] << " ";
    }

    std::cout << "\n";
}

void Task_13_3() {
    std::cout << equals << string_tasks[2] << equals;
    
    int begin = 0, end = -1, number;
    std::vector<int> db(20);
    std::string userAnswer;

    do {
        // ввод чисел в буфер
        do {
            std::cout << "Введите число: ";
            std::cin >> number;

            // если введенное число не последнее, то добавляем его в 
            if (number != -1) {
                // флаг необходимости изменения переменной, отвечающей за индекс начала буфера: если
                // значение индекса конца буфера равно -1, то отменить изменение индекса начала
                // буфера при равенстве индексов (необходимо для старта алгоритма)
                bool do_not_change = (end == -1);
                end = (end + 1) % 20;
                db[end] = number;
                if (end == begin && !do_not_change)
                    begin = (begin + 1) % 20;
            }
        } while (number != -1);

        print_buf(db, begin, end);
        
        std::cout << "Хотите продолжить ввод чисел? (Y - для продолжения)";
        std::cin >> userAnswer;
    } while (userAnswer == "Y");

    std::cout << "\n";

    print_buf(db, begin, end);
}
#endif
