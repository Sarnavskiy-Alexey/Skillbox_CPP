#pragma once

const std::string string_tasks[] = {
    "\t\t\tЗадание 1. Кукушка\n  Напишите программу, которая имитировала бы часы с кукушкой. В начале работы она спрашивает, который час, а затем нужное количество раз пишет «Ку-ку!». При выполнении задания необходимо обеспечить контроль ввода (например, количество часов не может быть отрицательным).\n",
    "\t\t\tЗадание 2. Слишком большие числа\n  У неудачливого бухгалтера всё опять идёт наперекосяк: ему приносят такие большие счета, что числа не помещаются на бумаге. Напишите программу, которая считала бы для него, сколько цифр (знаков) во вводимом числе.\n",
    "\t\t\tЗадание 3. Коллекторы\n  Напишите робота для коллекторов. В самом начале он спрашивает имя должника и сумму долга, а затем начинает требовать у него погашения долга до тех пор, пока тот не будет погашен полностью. Сумма долга должна уменьшаться, если пользователь ввёл сумму, меньшую чем сумма долга. Если пользователь внёс большую сумму, чем требуется для погашения, выведите сообщение о том, какой у него остаток на счету после такой операции. Обеспечьте контроль ввода.\n",
    "\t\t\tЗадание 4. Счастливый билетик\n  В старину, когда даже в столице билеты в общественном транспорте выдавали контролёры, существовало поверье: если на билете сумма первых трёх цифр в номере билета равна сумме трёх последних, то это к удаче. Напишите программу, которая получала бы на вход шестизначный номер билета и выводила, счастливый это билет или нет. К примеру, билеты 666 666 и 252 135 — счастливые, а 123 456 — нет.\n",
    "\t\t\tЗадание 5. Числа Фибоначчи\n  Числами Фибоначчи называется следующая последовательность чисел: 1, 1, 2, 3, 5, 8, 13 и так далее (первое число равно 1, второе число равно 1, а каждое следующее равно сумме двух предыдущих). Напишите программу, которая по данному номеру N выводит N-е число этой последовательности (если оно не превосходит 2 147 483 647, конечно же). Обеспечьте контроль ввода.\n",
    "\t\t\tЗадание 6. Вклады\n  Вклад в банке составляет X рублей. Ежегодно он увеличивается на P процентов, после чего дробная часть копеек отбрасывается. Определите, через сколько лет вклад составит не менее Y рублей. Напишите программу, которая по данным числам X, Y, P определяет, сколько лет пройдёт, прежде чем сумма достигнет значения Y.\n",
    "\t\t\tЗадание 7. Сокращение дроби* (дополнительное задание)\n  Пользователь вводит числа M и N. Напишите программу, которая преобразует дробь M/N к несократимому виду и выдаёт получившийся результат. Обеспечьте контроль ввода.\n",
    "\t\t\tЗадание 8. Угадай число* (дополнительное задание)\n  Напишите программу, которая угадывает число, задуманное пользователем. Число загадывается в диапазоне от 0 до 63. Программа задаёт вопросы вида «Ваше число больше такого-то?» и на основе ответов пользователя («да» или «нет») угадывает число.\n"
};

extern const std::string equals;

void Task_06_1();
void Task_06_2();
void Task_06_3();
void Task_06_4();
void Task_06_5();
void Task_06_6();
void Task_06_7();
void Task_06_8();
